//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XBRLApp.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class XbrlDbCsEntities : DbContext
    {
        public XbrlDbCsEntities()
            : base("name=XbrlDbCsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AllETLProgress> AllETLProgress { get; set; }
        public virtual DbSet<AuditTrailDetail> AuditTrailDetail { get; set; }
        public virtual DbSet<AuditTrailHeader> AuditTrailHeader { get; set; }
        public virtual DbSet<AuditTrailPageAccess> AuditTrailPageAccess { get; set; }
        public virtual DbSet<DailyProcessStatus> DailyProcessStatus { get; set; }
        public virtual DbSet<EmailRecipients> EmailRecipients { get; set; }
        public virtual DbSet<EmailSettings> EmailSettings { get; set; }
        public virtual DbSet<EmailTemplate> EmailTemplate { get; set; }
        public virtual DbSet<ETLProcessLogger> ETLProcessLogger { get; set; }
        public virtual DbSet<ETLProcessLoggerDetail> ETLProcessLoggerDetail { get; set; }
        public virtual DbSet<FileTaxoUpload> FileTaxoUpload { get; set; }
        public virtual DbSet<GenerateXbrlInstanceMonitor> GenerateXbrlInstanceMonitor { get; set; }
        public virtual DbSet<MemoryUtilize> MemoryUtilize { get; set; }
        public virtual DbSet<MsApprovalDetail> MsApprovalDetail { get; set; }
        public virtual DbSet<MsApprovalHeader> MsApprovalHeader { get; set; }
        public virtual DbSet<MsDefaultMenuValue> MsDefaultMenuValue { get; set; }
        public virtual DbSet<MsExcludeFileApproval> MsExcludeFileApproval { get; set; }
        public virtual DbSet<MsFileApproval> MsFileApproval { get; set; }
        public virtual DbSet<MsFileSecurity> MsFileSecurity { get; set; }
        public virtual DbSet<MsGroupApproval> MsGroupApproval { get; set; }
        public virtual DbSet<MsGroupMenu> MsGroupMenu { get; set; }
        public virtual DbSet<MsHistoryPassword> MsHistoryPassword { get; set; }
        public virtual DbSet<MsImpersonateCredential> MsImpersonateCredential { get; set; }
        public virtual DbSet<MsMenu> MsMenu { get; set; }
        public virtual DbSet<MsUser> MsUser { get; set; }
        public virtual DbSet<MsXbrlBaseFileName> MsXbrlBaseFileName { get; set; }
        public virtual DbSet<MsXbrlParameter> MsXbrlParameter { get; set; }
        public virtual DbSet<ProcessDownloadXbrl> ProcessDownloadXbrl { get; set; }
        public virtual DbSet<ServicesTaskChecker> ServicesTaskChecker { get; set; }
        public virtual DbSet<ServicesTaskCheckerStatus> ServicesTaskCheckerStatus { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<UnMappedForm> UnMappedForm { get; set; }
        public virtual DbSet<UploadTaxoProgress> UploadTaxoProgress { get; set; }
        public virtual DbSet<ValidateAllTechnicalValidation> ValidateAllTechnicalValidation { get; set; }
        public virtual DbSet<WebServicesLDAP> WebServicesLDAP { get; set; }
        public virtual DbSet<xbrl_AllBase> xbrl_AllBase { get; set; }
        public virtual DbSet<xbrl_BusinessValidation> xbrl_BusinessValidation { get; set; }
        public virtual DbSet<xbrl_ELEMENT> xbrl_ELEMENT { get; set; }
        public virtual DbSet<xbrl_ELEMENTbase> xbrl_ELEMENTbase { get; set; }
        public virtual DbSet<xbrl_ELEMENTtypes> xbrl_ELEMENTtypes { get; set; }
        public virtual DbSet<xbrl_FileDetail> xbrl_FileDetail { get; set; }
        public virtual DbSet<xbrl_FilePath> xbrl_FilePath { get; set; }
        public virtual DbSet<xbrl_FileWatcher> xbrl_FileWatcher { get; set; }
        public virtual DbSet<xbrl_Generated> xbrl_Generated { get; set; }
        public virtual DbSet<xbrl_LinkagesForm> xbrl_LinkagesForm { get; set; }
        public virtual DbSet<xbrl_Map> xbrl_Map { get; set; }
        public virtual DbSet<xbrl_NodeLevel> xbrl_NodeLevel { get; set; }
        public virtual DbSet<xbrl_ParserTable> xbrl_ParserTable { get; set; }
        public virtual DbSet<xbrl_RegConvertDb> xbrl_RegConvertDb { get; set; }
        public virtual DbSet<xbrl_SelectedTableForm> xbrl_SelectedTableForm { get; set; }
        public virtual DbSet<xbrl_SysDefault> xbrl_SysDefault { get; set; }
        public virtual DbSet<xbrl_TableForm> xbrl_TableForm { get; set; }
        public virtual DbSet<xbrl_TaxoVersion> xbrl_TaxoVersion { get; set; }
        public virtual DbSet<xbrl_UploadXml> xbrl_UploadXml { get; set; }
        public virtual DbSet<XbrlInstanceManagement> XbrlInstanceManagement { get; set; }
        public virtual DbSet<XbrlOnProgressManualValidationThread> XbrlOnProgressManualValidationThread { get; set; }
        public virtual DbSet<XbrlOnProgressSemiAutoValidationThread> XbrlOnProgressSemiAutoValidationThread { get; set; }
        public virtual DbSet<XbrlOnProgressValidationThread> XbrlOnProgressValidationThread { get; set; }
        public virtual DbSet<XbrlScheduler> XbrlScheduler { get; set; }
        public virtual DbSet<XbrlSchedulerMaster> XbrlSchedulerMaster { get; set; }
        public virtual DbSet<FormStatus> FormStatus { get; set; }
        public virtual DbSet<LBUSYRForm01XBRL_TI> LBUSYRForm01XBRL_TI { get; set; }
        public virtual DbSet<LBUSYRForm02XBRL_TI> LBUSYRForm02XBRL_TI { get; set; }
        public virtual DbSet<LBUSYRForm2AXBRL_TI> LBUSYRForm2AXBRL_TI { get; set; }
        public virtual DbSet<LBUSYRForm2CXBRL_TI> LBUSYRForm2CXBRL_TI { get; set; }
        public virtual DbSet<LBUSYRGabungan01XBRL_TI> LBUSYRGabungan01XBRL_TI { get; set; }
        public virtual DbSet<LBUSYRGabungan02XBRL_TI> LBUSYRGabungan02XBRL_TI { get; set; }
        public virtual DbSet<MsBankCode> MsBankCode { get; set; }
        public virtual DbSet<MsBranch> MsBranch { get; set; }
        public virtual DbSet<PageIndex> PageIndex { get; set; }
        public virtual DbSet<ParserTable> ParserTable { get; set; }
        public virtual DbSet<Temp_ManualProcessPageIndex> Temp_ManualProcessPageIndex { get; set; }
        public virtual DbSet<TEMP_TFINSTANCE> TEMP_TFINSTANCE { get; set; }
        public virtual DbSet<TempTableHistoryLog> TempTableHistoryLog { get; set; }
        public virtual DbSet<TempTableManualCorrection> TempTableManualCorrection { get; set; }
        public virtual DbSet<xbrl_Base> xbrl_Base { get; set; }
        public virtual DbSet<xbrl_BusinessValidation_10072013> xbrl_BusinessValidation_10072013 { get; set; }
        public virtual DbSet<xbrl_BusinessValidationTemp> xbrl_BusinessValidationTemp { get; set; }
        public virtual DbSet<xbrl_Form01> xbrl_Form01 { get; set; }
        public virtual DbSet<xbrl_Form02> xbrl_Form02 { get; set; }
        public virtual DbSet<xbrl_Form03> xbrl_Form03 { get; set; }
        public virtual DbSet<xbrl_Form04> xbrl_Form04 { get; set; }
        public virtual DbSet<xbrl_Form05> xbrl_Form05 { get; set; }
        public virtual DbSet<xbrl_Form06> xbrl_Form06 { get; set; }
        public virtual DbSet<xbrl_Form07> xbrl_Form07 { get; set; }
        public virtual DbSet<xbrl_Form08> xbrl_Form08 { get; set; }
        public virtual DbSet<xbrl_Form09> xbrl_Form09 { get; set; }
        public virtual DbSet<xbrl_Form10> xbrl_Form10 { get; set; }
        public virtual DbSet<xbrl_Form11> xbrl_Form11 { get; set; }
        public virtual DbSet<xbrl_Form12> xbrl_Form12 { get; set; }
        public virtual DbSet<xbrl_Form13> xbrl_Form13 { get; set; }
        public virtual DbSet<xbrl_Form14> xbrl_Form14 { get; set; }
        public virtual DbSet<xbrl_Form15> xbrl_Form15 { get; set; }
        public virtual DbSet<xbrl_Form16> xbrl_Form16 { get; set; }
        public virtual DbSet<xbrl_Form17> xbrl_Form17 { get; set; }
        public virtual DbSet<xbrl_Form18> xbrl_Form18 { get; set; }
        public virtual DbSet<xbrl_Form19> xbrl_Form19 { get; set; }
        public virtual DbSet<xbrl_Form20> xbrl_Form20 { get; set; }
        public virtual DbSet<xbrl_Form21> xbrl_Form21 { get; set; }
        public virtual DbSet<xbrl_Form22> xbrl_Form22 { get; set; }
        public virtual DbSet<xbrl_Form23> xbrl_Form23 { get; set; }
        public virtual DbSet<xbrl_Form24> xbrl_Form24 { get; set; }
        public virtual DbSet<xbrl_Form25> xbrl_Form25 { get; set; }
        public virtual DbSet<xbrl_Form26> xbrl_Form26 { get; set; }
        public virtual DbSet<xbrl_Form27> xbrl_Form27 { get; set; }
        public virtual DbSet<xbrl_Form28> xbrl_Form28 { get; set; }
        public virtual DbSet<xbrl_Form29> xbrl_Form29 { get; set; }
        public virtual DbSet<xbrl_Form2A> xbrl_Form2A { get; set; }
        public virtual DbSet<xbrl_Form2C> xbrl_Form2C { get; set; }
        public virtual DbSet<xbrl_Form30> xbrl_Form30 { get; set; }
        public virtual DbSet<xbrl_Form31> xbrl_Form31 { get; set; }
        public virtual DbSet<xbrl_Form32> xbrl_Form32 { get; set; }
        public virtual DbSet<xbrl_Form33> xbrl_Form33 { get; set; }
        public virtual DbSet<xbrl_Form34> xbrl_Form34 { get; set; }
        public virtual DbSet<xbrl_Form35> xbrl_Form35 { get; set; }
        public virtual DbSet<xbrl_Form36> xbrl_Form36 { get; set; }
        public virtual DbSet<xbrl_Form37> xbrl_Form37 { get; set; }
        public virtual DbSet<xbrl_Form38> xbrl_Form38 { get; set; }
        public virtual DbSet<xbrl_Form39> xbrl_Form39 { get; set; }
        public virtual DbSet<xbrl_Form40> xbrl_Form40 { get; set; }
        public virtual DbSet<xbrl_Form41> xbrl_Form41 { get; set; }
        public virtual DbSet<xbrl_Form42> xbrl_Form42 { get; set; }
        public virtual DbSet<xbrl_Form44> xbrl_Form44 { get; set; }
        public virtual DbSet<xbrl_Form45> xbrl_Form45 { get; set; }
        public virtual DbSet<xbrl_Form46> xbrl_Form46 { get; set; }
        public virtual DbSet<xbrl_Form47> xbrl_Form47 { get; set; }
        public virtual DbSet<xbrl_Form48> xbrl_Form48 { get; set; }
        public virtual DbSet<xbrl_Form49> xbrl_Form49 { get; set; }
        public virtual DbSet<xbrl_Form50> xbrl_Form50 { get; set; }
        public virtual DbSet<xbrl_Form51> xbrl_Form51 { get; set; }
        public virtual DbSet<xbrl_Form52> xbrl_Form52 { get; set; }
        public virtual DbSet<xbrl_Form53> xbrl_Form53 { get; set; }
        public virtual DbSet<xbrl_Form54> xbrl_Form54 { get; set; }
        public virtual DbSet<xbrl_FormAnak04> xbrl_FormAnak04 { get; set; }
        public virtual DbSet<xbrl_FormAnak05> xbrl_FormAnak05 { get; set; }
        public virtual DbSet<xbrl_FormAnak06> xbrl_FormAnak06 { get; set; }
        public virtual DbSet<xbrl_FormAnak07> xbrl_FormAnak07 { get; set; }
        public virtual DbSet<xbrl_FormAnak08> xbrl_FormAnak08 { get; set; }
        public virtual DbSet<xbrl_FormAnak09> xbrl_FormAnak09 { get; set; }
        public virtual DbSet<xbrl_FormAnak10> xbrl_FormAnak10 { get; set; }
        public virtual DbSet<xbrl_FormAnak11> xbrl_FormAnak11 { get; set; }
        public virtual DbSet<xbrl_FormAnak12> xbrl_FormAnak12 { get; set; }
        public virtual DbSet<xbrl_FormGabungan01> xbrl_FormGabungan01 { get; set; }
        public virtual DbSet<xbrl_FormGabungan02> xbrl_FormGabungan02 { get; set; }
        public virtual DbSet<xbrl_FormGabungan03> xbrl_FormGabungan03 { get; set; }
        public virtual DbSet<xbrl_FormGabungan04> xbrl_FormGabungan04 { get; set; }
        public virtual DbSet<xbrl_FormGabungan05> xbrl_FormGabungan05 { get; set; }
        public virtual DbSet<xbrl_FormGabungan06> xbrl_FormGabungan06 { get; set; }
        public virtual DbSet<xbrl_FormGabungan07> xbrl_FormGabungan07 { get; set; }
        public virtual DbSet<xbrl_FormGabungan08> xbrl_FormGabungan08 { get; set; }
        public virtual DbSet<xbrl_FormLA04> xbrl_FormLA04 { get; set; }
        public virtual DbSet<xbrl_FormLA05> xbrl_FormLA05 { get; set; }
        public virtual DbSet<xbrl_FormLA06> xbrl_FormLA06 { get; set; }
        public virtual DbSet<xbrl_FormLA07> xbrl_FormLA07 { get; set; }
        public virtual DbSet<xbrl_FormLA08> xbrl_FormLA08 { get; set; }
        public virtual DbSet<xbrl_FormLA09> xbrl_FormLA09 { get; set; }
        public virtual DbSet<xbrl_FormLA10> xbrl_FormLA10 { get; set; }
        public virtual DbSet<xbrl_FormLA11> xbrl_FormLA11 { get; set; }
        public virtual DbSet<xbrl_FormLA12> xbrl_FormLA12 { get; set; }
        public virtual DbSet<xbrl_FormLG03> xbrl_FormLG03 { get; set; }
        public virtual DbSet<xbrl_FormLG04> xbrl_FormLG04 { get; set; }
        public virtual DbSet<xbrl_FormLG05> xbrl_FormLG05 { get; set; }
        public virtual DbSet<xbrl_FormLG06> xbrl_FormLG06 { get; set; }
        public virtual DbSet<xbrl_FormLG07> xbrl_FormLG07 { get; set; }
        public virtual DbSet<xbrl_FormLG08> xbrl_FormLG08 { get; set; }
        public virtual DbSet<xbrl_SysCounter> xbrl_SysCounter { get; set; }
        public virtual DbSet<xbrl_SysProfile> xbrl_SysProfile { get; set; }
        public virtual DbSet<xbrl_History_Form01> xbrl_History_Form01 { get; set; }
        public virtual DbSet<xbrl_History_Form13> xbrl_History_Form13 { get; set; }
        public virtual DbSet<vw_AuditTrailHeader> vw_AuditTrailHeader { get; set; }
        public virtual DbSet<vw_AuditTrailPageAccess> vw_AuditTrailPageAccess { get; set; }
        public virtual DbSet<vw_Form03> vw_Form03 { get; set; }
        public virtual DbSet<vw_Form04> vw_Form04 { get; set; }
        public virtual DbSet<vw_Form05> vw_Form05 { get; set; }
        public virtual DbSet<vw_Form06> vw_Form06 { get; set; }
        public virtual DbSet<vw_Form07> vw_Form07 { get; set; }
        public virtual DbSet<vw_Form08> vw_Form08 { get; set; }
        public virtual DbSet<vw_Form09> vw_Form09 { get; set; }
        public virtual DbSet<vw_Form10> vw_Form10 { get; set; }
        public virtual DbSet<vw_Form11> vw_Form11 { get; set; }
        public virtual DbSet<vw_Form12> vw_Form12 { get; set; }
        public virtual DbSet<vw_Form13> vw_Form13 { get; set; }
        public virtual DbSet<vw_Form14> vw_Form14 { get; set; }
        public virtual DbSet<vw_Form15> vw_Form15 { get; set; }
        public virtual DbSet<vw_Form16> vw_Form16 { get; set; }
        public virtual DbSet<vw_Form17> vw_Form17 { get; set; }
        public virtual DbSet<vw_Form18> vw_Form18 { get; set; }
        public virtual DbSet<vw_Form19> vw_Form19 { get; set; }
        public virtual DbSet<vw_Form20> vw_Form20 { get; set; }
        public virtual DbSet<vw_Form21> vw_Form21 { get; set; }
        public virtual DbSet<vw_Form22> vw_Form22 { get; set; }
        public virtual DbSet<vw_Form23> vw_Form23 { get; set; }
        public virtual DbSet<vw_Form24> vw_Form24 { get; set; }
        public virtual DbSet<vw_Form25> vw_Form25 { get; set; }
        public virtual DbSet<vw_Form26> vw_Form26 { get; set; }
        public virtual DbSet<vw_Form27> vw_Form27 { get; set; }
        public virtual DbSet<vw_Form28> vw_Form28 { get; set; }
        public virtual DbSet<vw_Form29> vw_Form29 { get; set; }
        public virtual DbSet<vw_Form30> vw_Form30 { get; set; }
        public virtual DbSet<vw_Form31> vw_Form31 { get; set; }
        public virtual DbSet<vw_Form32> vw_Form32 { get; set; }
        public virtual DbSet<vw_Form33> vw_Form33 { get; set; }
        public virtual DbSet<vw_Form34> vw_Form34 { get; set; }
        public virtual DbSet<vw_Form35> vw_Form35 { get; set; }
        public virtual DbSet<vw_Form36> vw_Form36 { get; set; }
        public virtual DbSet<vw_Form37> vw_Form37 { get; set; }
        public virtual DbSet<vw_Form38> vw_Form38 { get; set; }
        public virtual DbSet<vw_Form39> vw_Form39 { get; set; }
        public virtual DbSet<vw_Form40> vw_Form40 { get; set; }
        public virtual DbSet<vw_Form41> vw_Form41 { get; set; }
        public virtual DbSet<vw_Form42> vw_Form42 { get; set; }
        public virtual DbSet<vw_Form43> vw_Form43 { get; set; }
        public virtual DbSet<vw_Form44> vw_Form44 { get; set; }
        public virtual DbSet<vw_Form45> vw_Form45 { get; set; }
        public virtual DbSet<vw_Form46> vw_Form46 { get; set; }
        public virtual DbSet<vw_Form47> vw_Form47 { get; set; }
        public virtual DbSet<vw_Form48> vw_Form48 { get; set; }
        public virtual DbSet<vw_Form49> vw_Form49 { get; set; }
        public virtual DbSet<vw_Form50> vw_Form50 { get; set; }
        public virtual DbSet<vw_Form51> vw_Form51 { get; set; }
        public virtual DbSet<vw_Form52> vw_Form52 { get; set; }
        public virtual DbSet<vw_Form53> vw_Form53 { get; set; }
        public virtual DbSet<vw_Form54> vw_Form54 { get; set; }
        public virtual DbSet<vw_FormAnak04> vw_FormAnak04 { get; set; }
        public virtual DbSet<vw_FormAnak05> vw_FormAnak05 { get; set; }
        public virtual DbSet<vw_FormAnak06> vw_FormAnak06 { get; set; }
        public virtual DbSet<vw_FormAnak07> vw_FormAnak07 { get; set; }
        public virtual DbSet<vw_FormAnak08> vw_FormAnak08 { get; set; }
        public virtual DbSet<vw_FormAnak09> vw_FormAnak09 { get; set; }
        public virtual DbSet<vw_FormAnak10> vw_FormAnak10 { get; set; }
        public virtual DbSet<vw_FormAnak12> vw_FormAnak12 { get; set; }
        public virtual DbSet<vw_FormGabungan03> vw_FormGabungan03 { get; set; }
        public virtual DbSet<vw_FormGabungan04> vw_FormGabungan04 { get; set; }
        public virtual DbSet<vw_FormGabungan05> vw_FormGabungan05 { get; set; }
        public virtual DbSet<vw_FormGabungan06> vw_FormGabungan06 { get; set; }
        public virtual DbSet<vw_FormGabungan07> vw_FormGabungan07 { get; set; }
        public virtual DbSet<vw_FormGabungan08> vw_FormGabungan08 { get; set; }
        public virtual DbSet<vw_UploadXml> vw_UploadXml { get; set; }
        public virtual DbSet<vw_ViewServicesAndTaskManagerParameter> vw_ViewServicesAndTaskManagerParameter { get; set; }
        public virtual DbSet<vw_XbrlScheduler> vw_XbrlScheduler { get; set; }
    
        public virtual int GetPageDate_MappingForm(string whereClause, string orderBy, Nullable<int> pageIndex, Nullable<int> pageSize, string tableName)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("WhereClause", whereClause) :
                new ObjectParameter("WhereClause", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPageDate_MappingForm", whereClauseParameter, orderByParameter, pageIndexParameter, pageSizeParameter, tableNameParameter);
        }
    
        public virtual int GetPagedData(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, string whereClause, ObjectParameter itemCount)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPagedData", tableNameParameter, pageSizeParameter, currentPageParameter, whereClauseParameter, itemCount);
        }
    
        public virtual int GetPagedData_Suggestion(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, string columnName, string @operator, string valueSearch, string branchCode, ObjectParameter itemCount, string sortOrder, string sortExpr)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var valueSearchParameter = valueSearch != null ?
                new ObjectParameter("ValueSearch", valueSearch) :
                new ObjectParameter("ValueSearch", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortExprParameter = sortExpr != null ?
                new ObjectParameter("SortExpr", sortExpr) :
                new ObjectParameter("SortExpr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPagedData_Suggestion", tableNameParameter, pageSizeParameter, currentPageParameter, columnNameParameter, operatorParameter, valueSearchParameter, branchCodeParameter, itemCount, sortOrderParameter, sortExprParameter);
        }
    
        public virtual int GetPagedData_TechnicalValidation(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, string columnName, string @operator, string valueSearch, string branchCode, ObjectParameter itemCount, string sortOrder, string sortExpr, string tvID)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var valueSearchParameter = valueSearch != null ?
                new ObjectParameter("ValueSearch", valueSearch) :
                new ObjectParameter("ValueSearch", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortExprParameter = sortExpr != null ?
                new ObjectParameter("SortExpr", sortExpr) :
                new ObjectParameter("SortExpr", typeof(string));
    
            var tvIDParameter = tvID != null ?
                new ObjectParameter("TvID", tvID) :
                new ObjectParameter("TvID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPagedData_TechnicalValidation", tableNameParameter, pageSizeParameter, currentPageParameter, columnNameParameter, operatorParameter, valueSearchParameter, branchCodeParameter, itemCount, sortOrderParameter, sortExprParameter, tvIDParameter);
        }
    
        public virtual int GetPagedData_UploadManualCorrection(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, string columnName, string @operator, string valueSearch, string branchCode, ObjectParameter itemCount, string sortOrder, string sortExpr, string tvID)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var valueSearchParameter = valueSearch != null ?
                new ObjectParameter("ValueSearch", valueSearch) :
                new ObjectParameter("ValueSearch", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortExprParameter = sortExpr != null ?
                new ObjectParameter("SortExpr", sortExpr) :
                new ObjectParameter("SortExpr", typeof(string));
    
            var tvIDParameter = tvID != null ?
                new ObjectParameter("TvID", tvID) :
                new ObjectParameter("TvID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPagedData_UploadManualCorrection", tableNameParameter, pageSizeParameter, currentPageParameter, columnNameParameter, operatorParameter, valueSearchParameter, branchCodeParameter, itemCount, sortOrderParameter, sortExprParameter, tvIDParameter);
        }
    
        public virtual int GetPagedData_v2(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, string whereClause)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPagedData_v2", tableNameParameter, pageSizeParameter, currentPageParameter, whereClauseParameter);
        }
    
        public virtual int Incrementor(string tablename, string idcol, string getPrefix)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var idcolParameter = idcol != null ?
                new ObjectParameter("idcol", idcol) :
                new ObjectParameter("idcol", typeof(string));
    
            var getPrefixParameter = getPrefix != null ?
                new ObjectParameter("getPrefix", getPrefix) :
                new ObjectParameter("getPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Incrementor", tablenameParameter, idcolParameter, getPrefixParameter);
        }
    
        public virtual int SP_Form1(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form1", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_Form1Initial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form1Initial");
        }
    
        public virtual int SP_Form1Pivot(string biBankID)
        {
            var biBankIDParameter = biBankID != null ?
                new ObjectParameter("BiBankID", biBankID) :
                new ObjectParameter("BiBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form1Pivot", biBankIDParameter);
        }
    
        public virtual int SP_Form2(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_Form2A(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2A", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_Form2AInitial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2AInitial");
        }
    
        public virtual int SP_Form2C(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2C", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_Form2CInitial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2CInitial");
        }
    
        public virtual int SP_Form2CPivot(string biBankID)
        {
            var biBankIDParameter = biBankID != null ?
                new ObjectParameter("BiBankID", biBankID) :
                new ObjectParameter("BiBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2CPivot", biBankIDParameter);
        }
    
        public virtual int SP_Form2Initial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2Initial");
        }
    
        public virtual int SP_Form2Pivot(string biBankID)
        {
            var biBankIDParameter = biBankID != null ?
                new ObjectParameter("BiBankID", biBankID) :
                new ObjectParameter("BiBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form2Pivot", biBankIDParameter);
        }
    
        public virtual int SP_Form43(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form43", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_Form43Initial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form43Initial");
        }
    
        public virtual int SP_Form43Pivot(string biBankID)
        {
            var biBankIDParameter = biBankID != null ?
                new ObjectParameter("BiBankID", biBankID) :
                new ObjectParameter("BiBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Form43Pivot", biBankIDParameter);
        }
    
        public virtual int SP_FormGabungan01(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FormGabungan01", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_FormGabungan01Initial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FormGabungan01Initial");
        }
    
        public virtual int SP_FormGabungan01Pivot(string biBankID)
        {
            var biBankIDParameter = biBankID != null ?
                new ObjectParameter("BiBankID", biBankID) :
                new ObjectParameter("BiBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FormGabungan01Pivot", biBankIDParameter);
        }
    
        public virtual int SP_FormGabungan02(string periode, string bIBankID)
        {
            var periodeParameter = periode != null ?
                new ObjectParameter("periode", periode) :
                new ObjectParameter("periode", typeof(string));
    
            var bIBankIDParameter = bIBankID != null ?
                new ObjectParameter("BIBankID", bIBankID) :
                new ObjectParameter("BIBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FormGabungan02", periodeParameter, bIBankIDParameter);
        }
    
        public virtual int SP_FormGabungan02Initial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FormGabungan02Initial");
        }
    
        public virtual int SP_FormGabungan02Pivot(string biBankID)
        {
            var biBankIDParameter = biBankID != null ?
                new ObjectParameter("BiBankID", biBankID) :
                new ObjectParameter("BiBankID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FormGabungan02Pivot", biBankIDParameter);
        }
    
        public virtual ObjectResult<string> SP_GetAllFormHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetAllFormHistory");
        }
    
        public virtual int SP_GetUnMappedForm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetUnMappedForm");
        }
    
        public virtual ObjectResult<SP_GetUnMappedFormForm_Result> SP_GetUnMappedFormForm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUnMappedFormForm_Result>("SP_GetUnMappedFormForm");
        }
    
        public virtual int insertIncrement(string incrementedColumn, string tbname, string idcol, string getPrefix)
        {
            var incrementedColumnParameter = incrementedColumn != null ?
                new ObjectParameter("IncrementedColumn", incrementedColumn) :
                new ObjectParameter("IncrementedColumn", typeof(string));
    
            var tbnameParameter = tbname != null ?
                new ObjectParameter("tbname", tbname) :
                new ObjectParameter("tbname", typeof(string));
    
            var idcolParameter = idcol != null ?
                new ObjectParameter("idcol", idcol) :
                new ObjectParameter("idcol", typeof(string));
    
            var getPrefixParameter = getPrefix != null ?
                new ObjectParameter("getPrefix", getPrefix) :
                new ObjectParameter("getPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertIncrement", incrementedColumnParameter, tbnameParameter, idcolParameter, getPrefixParameter);
        }
    
        public virtual int sp_AuditTrailHouseKeeping(Nullable<int> periodindays)
        {
            var periodindaysParameter = periodindays.HasValue ?
                new ObjectParameter("periodindays", periodindays) :
                new ObjectParameter("periodindays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AuditTrailHouseKeeping", periodindaysParameter);
        }
    
        public virtual int sp_CreateAutoMappedView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateAutoMappedView");
        }
    
        public virtual int sp_GenViewForManualCorrectionUpload(string queryGetTable, string activeTaxoVersion)
        {
            var queryGetTableParameter = queryGetTable != null ?
                new ObjectParameter("queryGetTable", queryGetTable) :
                new ObjectParameter("queryGetTable", typeof(string));
    
            var activeTaxoVersionParameter = activeTaxoVersion != null ?
                new ObjectParameter("activeTaxoVersion", activeTaxoVersion) :
                new ObjectParameter("activeTaxoVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GenViewForManualCorrectionUpload", queryGetTableParameter, activeTaxoVersionParameter);
        }
    
        public virtual int sp_GetAssertionValue(string period, string bankCode, string assertionPath, string instanceName)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("bankCode", bankCode) :
                new ObjectParameter("bankCode", typeof(string));
    
            var assertionPathParameter = assertionPath != null ?
                new ObjectParameter("assertionPath", assertionPath) :
                new ObjectParameter("assertionPath", typeof(string));
    
            var instanceNameParameter = instanceName != null ?
                new ObjectParameter("instanceName", instanceName) :
                new ObjectParameter("instanceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetAssertionValue", periodParameter, bankCodeParameter, assertionPathParameter, instanceNameParameter);
        }
    
        public virtual int sp_GetDataColumnCriteria(string formName)
        {
            var formNameParameter = formName != null ?
                new ObjectParameter("formName", formName) :
                new ObjectParameter("formName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetDataColumnCriteria", formNameParameter);
        }
    
        public virtual int sp_GetLogAssertionValue(string logPath)
        {
            var logPathParameter = logPath != null ?
                new ObjectParameter("logPath", logPath) :
                new ObjectParameter("logPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetLogAssertionValue", logPathParameter);
        }
    
        public virtual int sp_GetManualProgressIndicator(Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetManualProgressIndicator", pageSizeParameter, pageIndexParameter);
        }
    
        public virtual int sp_GetMasterFileApproval(Nullable<int> msGroupUserApproval, string whereClause, string orderBy, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var msGroupUserApprovalParameter = msGroupUserApproval.HasValue ?
                new ObjectParameter("MsGroupUserApproval", msGroupUserApproval) :
                new ObjectParameter("MsGroupUserApproval", typeof(int));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("WhereClause", whereClause) :
                new ObjectParameter("WhereClause", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetMasterFileApproval", msGroupUserApprovalParameter, whereClauseParameter, orderByParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int sp_GetPageTable(string tableName, string fromTableName, string columnName, string @operator, string valueSearch)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var fromTableNameParameter = fromTableName != null ?
                new ObjectParameter("fromTableName", fromTableName) :
                new ObjectParameter("fromTableName", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var valueSearchParameter = valueSearch != null ?
                new ObjectParameter("ValueSearch", valueSearch) :
                new ObjectParameter("ValueSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetPageTable", tableNameParameter, fromTableNameParameter, columnNameParameter, operatorParameter, valueSearchParameter);
        }
    
        public virtual int sp_GetUploadXml(string whereClause, string orderBy, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("WhereClause", whereClause) :
                new ObjectParameter("WhereClause", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetUploadXml", whereClauseParameter, orderByParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int sp_HistoryForm_GetPage(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter itemCount, string valueSearch, string columnName, string @operator, string sortOrder, string sortExpr, string bankCode)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var valueSearchParameter = valueSearch != null ?
                new ObjectParameter("ValueSearch", valueSearch) :
                new ObjectParameter("ValueSearch", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortExprParameter = sortExpr != null ?
                new ObjectParameter("SortExpr", sortExpr) :
                new ObjectParameter("SortExpr", typeof(string));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_HistoryForm_GetPage", tableNameParameter, pageSizeParameter, currentPageParameter, itemCount, valueSearchParameter, columnNameParameter, operatorParameter, sortOrderParameter, sortExprParameter, bankCodeParameter);
        }
    
        public virtual ObjectResult<sp_IncludeFiles_Result> sp_IncludeFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IncludeFiles_Result>("sp_IncludeFiles");
        }
    
        public virtual int sp_Incrementor(string tablename, string idcol, string getPrefix)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var idcolParameter = idcol != null ?
                new ObjectParameter("idcol", idcol) :
                new ObjectParameter("idcol", typeof(string));
    
            var getPrefixParameter = getPrefix != null ?
                new ObjectParameter("getPrefix", getPrefix) :
                new ObjectParameter("getPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Incrementor", tablenameParameter, idcolParameter, getPrefixParameter);
        }
    
        public virtual int sp_InsertIncrement(string incrementedColumn, string tbname, string idcol, string getPrefix)
        {
            var incrementedColumnParameter = incrementedColumn != null ?
                new ObjectParameter("IncrementedColumn", incrementedColumn) :
                new ObjectParameter("IncrementedColumn", typeof(string));
    
            var tbnameParameter = tbname != null ?
                new ObjectParameter("tbname", tbname) :
                new ObjectParameter("tbname", typeof(string));
    
            var idcolParameter = idcol != null ?
                new ObjectParameter("idcol", idcol) :
                new ObjectParameter("idcol", typeof(string));
    
            var getPrefixParameter = getPrefix != null ?
                new ObjectParameter("getPrefix", getPrefix) :
                new ObjectParameter("getPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertIncrement", incrementedColumnParameter, tbnameParameter, idcolParameter, getPrefixParameter);
        }
    
        public virtual int sp_InsertTaxo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTaxo");
        }
    
        public virtual int sp_ListFolderFileSize(string dir)
        {
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListFolderFileSize", dirParameter);
        }
    
        public virtual int sp_ManualCorrection(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ManualCorrection", tableNameParameter);
        }
    
        public virtual int sp_ManualCorrection_GetPaged(string tableName, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter itemCount, string valueSearch, string columnName, string @operator, string sortOrder, string sortExpr, string bankCode)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var valueSearchParameter = valueSearch != null ?
                new ObjectParameter("ValueSearch", valueSearch) :
                new ObjectParameter("ValueSearch", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortExprParameter = sortExpr != null ?
                new ObjectParameter("SortExpr", sortExpr) :
                new ObjectParameter("SortExpr", typeof(string));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ManualCorrection_GetPaged", tableNameParameter, pageSizeParameter, currentPageParameter, itemCount, valueSearchParameter, columnNameParameter, operatorParameter, sortOrderParameter, sortExprParameter, bankCodeParameter);
        }
    
        public virtual int sp_MapFromPreviousVersion(string userUpdate, string prevVersion, string currVersion, string tableName)
        {
            var userUpdateParameter = userUpdate != null ?
                new ObjectParameter("userUpdate", userUpdate) :
                new ObjectParameter("userUpdate", typeof(string));
    
            var prevVersionParameter = prevVersion != null ?
                new ObjectParameter("prevVersion", prevVersion) :
                new ObjectParameter("prevVersion", typeof(string));
    
            var currVersionParameter = currVersion != null ?
                new ObjectParameter("currVersion", currVersion) :
                new ObjectParameter("currVersion", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MapFromPreviousVersion", userUpdateParameter, prevVersionParameter, currVersionParameter, tableNameParameter);
        }
    
        public virtual int sp_MappingForm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MappingForm");
        }
    
        public virtual int sp_MappingForm2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MappingForm2");
        }
    
        public virtual int sp_MappingForm_BakOld()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MappingForm_BakOld");
        }
    
        public virtual int sp_Parsing_View(string queryGetTable, string activeTaxoVersion)
        {
            var queryGetTableParameter = queryGetTable != null ?
                new ObjectParameter("queryGetTable", queryGetTable) :
                new ObjectParameter("queryGetTable", typeof(string));
    
            var activeTaxoVersionParameter = activeTaxoVersion != null ?
                new ObjectParameter("activeTaxoVersion", activeTaxoVersion) :
                new ObjectParameter("activeTaxoVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Parsing_View", queryGetTableParameter, activeTaxoVersionParameter);
        }
    
        public virtual int sp_Parsing_View_Upload(string queryGetTable, string activeTaxoVersion)
        {
            var queryGetTableParameter = queryGetTable != null ?
                new ObjectParameter("queryGetTable", queryGetTable) :
                new ObjectParameter("queryGetTable", typeof(string));
    
            var activeTaxoVersionParameter = activeTaxoVersion != null ?
                new ObjectParameter("activeTaxoVersion", activeTaxoVersion) :
                new ObjectParameter("activeTaxoVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Parsing_View_Upload", queryGetTableParameter, activeTaxoVersionParameter);
        }
    
        public virtual int sp_SaveDataManualUpload(string tblName)
        {
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveDataManualUpload", tblNameParameter);
        }
    
        public virtual int sp_TableSelection(string period, string sandiBank, string tableName)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var sandiBankParameter = sandiBank != null ?
                new ObjectParameter("sandiBank", sandiBank) :
                new ObjectParameter("sandiBank", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TableSelection", periodParameter, sandiBankParameter, tableNameParameter);
        }
    
        public virtual int sp_ValidationTechnic(string tableCheckName, string dbName)
        {
            var tableCheckNameParameter = tableCheckName != null ?
                new ObjectParameter("tableCheckName", tableCheckName) :
                new ObjectParameter("tableCheckName", typeof(string));
    
            var dbNameParameter = dbName != null ?
                new ObjectParameter("dbName", dbName) :
                new ObjectParameter("dbName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ValidationTechnic", tableCheckNameParameter, dbNameParameter);
        }
    
        public virtual int sp_ValidationTechnicUpload(string tableCheckName)
        {
            var tableCheckNameParameter = tableCheckName != null ?
                new ObjectParameter("tableCheckName", tableCheckName) :
                new ObjectParameter("tableCheckName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ValidationTechnicUpload", tableCheckNameParameter);
        }
    
        public virtual int sp_Xbrl_AllBase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Xbrl_AllBase");
        }
    
        public virtual int sp_Xbrl_Base()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Xbrl_Base");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_deleteAuditTrailHeader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteAuditTrailHeader");
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_uploadxml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_uploadxml");
        }
    
        public virtual int usp_InsertETLProcessLoggerHeader(string eTLName, string fullETLName, Nullable<System.DateTime> startProcess, Nullable<System.DateTime> endProcess, Nullable<System.DateTime> createdDate, string createdBy, ObjectParameter iDGenerate)
        {
            var eTLNameParameter = eTLName != null ?
                new ObjectParameter("ETLName", eTLName) :
                new ObjectParameter("ETLName", typeof(string));
    
            var fullETLNameParameter = fullETLName != null ?
                new ObjectParameter("FullETLName", fullETLName) :
                new ObjectParameter("FullETLName", typeof(string));
    
            var startProcessParameter = startProcess.HasValue ?
                new ObjectParameter("StartProcess", startProcess) :
                new ObjectParameter("StartProcess", typeof(System.DateTime));
    
            var endProcessParameter = endProcess.HasValue ?
                new ObjectParameter("EndProcess", endProcess) :
                new ObjectParameter("EndProcess", typeof(System.DateTime));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertETLProcessLoggerHeader", eTLNameParameter, fullETLNameParameter, startProcessParameter, endProcessParameter, createdDateParameter, createdByParameter, iDGenerate);
        }
    
        public virtual int usp_InsertParserTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertParserTable");
        }
    }
}
